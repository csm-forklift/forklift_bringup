<!-- Starts up all nodes for running the robot -->
<launch>
    <!-- Prints output messages to screen for all nodes -->
    <arg name="debug" default="false" />

    <!-- Select sensors to use -->
    <arg name="use_camera" default="true" />
    <arg name="use_encoders" default="true" />
    <arg name="use_imu" default="true" />

    <!-- set names of sensors -->
    <arg name="camera" default="camera1" />
    <arg name="imu" default="imu" />
    <arg name="laser_scanner" default="laser_scanner1" />

    <!-- Start generating transforms -->
    <include file="$(find setup_tf)/launch/setup_tf.launch">
	    <arg name="debug" value="$(arg debug)" />
    </include>
    <!-- Load IMU Calibration Parameters -->
    <group ns="imu/calibration">
    	<rosparam file="$(find sensors)/config/imu_calibration.yaml" command="load" />
    </group>

    <!-- Begin serial node for Arduino -->
    <!-- get port Arduino is connected to -->
    <arg name="port" default="/dev/ttyACM0" />
    <node pkg="rosserial_python" name="serial_node" type="serial_node.py" respawn="true">
        <param name="port" value="$(arg port)" />
    </node>

    <!-- Begin nodes for converting sensor reading (encoders and IMU) -->
    <node if="$(arg use_encoders)" pkg="sensors" name="encoder_odom" type="encoder_odom.py" respawn="true" />
    <node if="$(arg use_imu)" pkg="sensors" name="imu_read" type="imu_read.py" respawn="true" />

    <!-- Load Camera Calibrations -->
    <group ns="camera1/calibration_rgb">
        <rosparam file="$(find cameras)/calibrations/camera1_rgb.yaml" command="load" />
    </group>

    <!-- Camera Node -->
    <group if="$(arg use_camera)">
        <include file="$(find astra_launch)/launch/astra.launch">
            <arg name="camera" value="$(arg camera)" />
        </include>
        <group if="$(arg debug)">
            <node pkg="cameras" name="camera_pose" type="camera_pose" respawn="true" output="screen">
                <remap from="/camera/rgb/image_raw" to="/$(arg camera)/rgb/image_raw" />
            </node>
        </group>
        <group unless="$(arg debug)">
            <node pkg="cameras" name="camera_pose" type="camera_pose" respawn="true">
                <remap from="/camera/rgb/image_raw" to="/$(arg camera)/rgb/image_raw" />
            </node>
        </group>
    </group>

    <!-- Robot localization -->
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se" clear_params="true">
        <rosparam command="load" file="$(find robot_localization)/params/seastar.yaml" />
        <remap from="odometry/filtered" to="odom/filtered" />
    </node>
</launch>
